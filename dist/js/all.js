class DBHelper{static get DATABASE_URL(){return"http://localhost:1337/"}static get RESTAURANT_URL(){return`${this.DATABASE_URL}restaurants/`}static get REVIEW_URL(){return`${this.DATABASE_URL}reviews/`}static get database(){if(!navigator.serviceWorker)return Promise.resolve();return(window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB||window.shimIndexedDB).open("rreviews",1)}static fetchRestaurants(e){DBHelper.getRestaurantDataFromIndexedDB().then(t=>{e(null,t)}),fetch(DBHelper.RESTAURANT_URL).then(e=>e.json()).then(t=>{DBHelper.storeRestaurantDataInIndexedDB(t),e(null,t)}).catch(t=>{e(t,null)})}static fetchRestaurantById(e,t){const n=`${this.REVIEW_URL}?restaurant_id=${e}`,a=DBHelper.database;DBHelper.upgadeIndexedDB(a),a&&(a.onsuccess=(r=>{const s=a.result;s.transaction(["rreviews"],"readwrite").objectStore("rreviews").index("id").openCursor().onsuccess=(a=>{const r=a.target.result;if(r)if(r.value.id==e){const e=r.value;fetch(n).then(e=>e.json()).then(n=>{e.reviews=n,s.transaction(["rreviews"],"readwrite").objectStore("rreviews").put(e),t(null,e)}).catch(n=>{t(null,e)})}else r.continue()})}))}static storeRestaurantDataInIndexedDB(e){const t=DBHelper.database;DBHelper.upgadeIndexedDB(t),t&&(t.onsuccess=(n=>{const a=t.result.transaction("rreviews","readwrite").objectStore("rreviews");e.forEach(e=>{a.put(e)})}))}static setRestaurantFavorite(e,t){const n=DBHelper.database;DBHelper.upgadeIndexedDB(n),n&&(n.onsuccess=(a=>{const r=n.result.transaction(["rreviews"],"readwrite").objectStore("rreviews").index("id"),s=`${this.RESTAURANT_URL}${e}/?is_favorite=${t}`;r.openCursor().onsuccess=(n=>{const a=n.target.result;if(a)if(a.value.id==e){a.value.is_favorite=t,a.update(a.value);const e=new Request(s,{method:"PUT"});fetch(e).catch(e=>{navigator.onLine||this.addRequestToQueue({url:s,options:{method:"PUT"}})})}else a.continue()})}))}static addRestaurantReview(e){const t=new Request(this.REVIEW_URL,{body:JSON.stringify(e),method:"POST"});fetch(t).then(e=>e.json()).then(t=>{this.fetchRestaurantById(e.restaurant_id,{})}).catch(t=>{navigator.onLine||this.addRequestToQueue({url:this.REVIEW_URL,options:{body:JSON.stringify(e),method:"POST"}}),this.fetchRestaurantById(e.restaurant_id,(t,n)=>{n.reviews.push(e);const a=DBHelper.database;DBHelper.upgadeIndexedDB(a),a&&(a.onsuccess=(e=>{a.result.transaction(["rreviews"],"readwrite").objectStore("rreviews").put(n)}))})})}static getRestaurantDataFromIndexedDB(){return new Promise((e,t)=>{const n=DBHelper.database;DBHelper.upgadeIndexedDB(n),n&&(n.onsuccess=(t=>{const a=[];n.result.transaction("rreviews","readonly").objectStore("rreviews").openCursor().onsuccess=(t=>{const n=t.target.result;n?(a.push(n.value),n.continue()):e(a)})}))})}static upgadeIndexedDB(e){e.onupgradeneeded=function(){const t=e.result,n=t.createObjectStore("rreviews",{keyPath:"id"});n.createIndex("name","name"),n.createIndex("id","id",{unique:!0}),t.createObjectStore("requestqueue",{autoIncrement:!0})}}static fetchRestaurantByCuisine(e,t){DBHelper.fetchRestaurants((n,a)=>{if(n)t(n,null);else{const n=a.filter(t=>t.cuisine_type==e);t(null,n)}})}static fetchRestaurantByNeighborhood(e,t){DBHelper.fetchRestaurants((n,a)=>{if(n)t(n,null);else{const n=a.filter(t=>t.neighborhood==e);t(null,n)}})}static fetchRestaurantByCuisineAndNeighborhood(e,t,n){DBHelper.fetchRestaurants((a,r)=>{if(a)n(a,null);else{let a=r;"all"!=e&&(a=a.filter(t=>t.cuisine_type==e)),"all"!=t&&(a=a.filter(e=>e.neighborhood==t)),n(null,a)}})}static fetchNeighborhoods(e){DBHelper.fetchRestaurants((t,n)=>{if(t)e(t,null);else{const t=n.map((e,t)=>n[t].neighborhood),a=t.filter((e,n)=>t.indexOf(e)==n);e(null,a)}})}static fetchCuisines(e){DBHelper.fetchRestaurants((t,n)=>{if(t)e(t,null);else{const t=n.map((e,t)=>n[t].cuisine_type),a=t.filter((e,n)=>t.indexOf(e)==n);e(null,a)}})}static urlForRestaurant(e){return`./restaurant.html?id=${e.id}`}static imageUrlForRestaurant(e){return`/img/${e.photograph?e.photograph:e.id}`}static mapMarkerForRestaurant(e,t){return new google.maps.Marker({position:e.latlng,title:e.name,url:DBHelper.urlForRestaurant(e),map:t,animation:google.maps.Animation.DROP})}static addRequestToQueue(e){const t=DBHelper.database;DBHelper.upgadeIndexedDB(t),t&&(t.onsuccess=(n=>{t.result.transaction("requestqueue","readwrite").objectStore("requestqueue").put(e)}))}static sendQueuedRequests(){const e=DBHelper.database;DBHelper.upgadeIndexedDB(e),e&&(e.onsuccess=(t=>{e.result.transaction("requestqueue","readwrite").objectStore("requestqueue").openCursor().onsuccess=(e=>{const t=e.target.result;if(t){const e=new Request(t.value.url,t.value.options);fetch(e),t.delete(),t.continue()}})}))}}let map,restaurant;function fetchNeighborhoods(){DBHelper.fetchNeighborhoods((e,t)=>{e?console.error(e):(this.neighborhoods=t,fillNeighborhoodsHTML())})}function fillNeighborhoodsHTML(e=this.neighborhoods){const t=document.getElementById("neighborhoods-select");t&&e.forEach(e=>{const n=document.createElement("option");n.innerHTML=e,n.value=e,t.appendChild(n)})}function fetchCuisines(){DBHelper.fetchCuisines((e,t)=>{e?console.error(e):(this.cuisines=t,fillCuisinesHTML())})}function fillCuisinesHTML(e=this.cuisines){const t=document.getElementById("cuisines-select");t&&e.forEach(e=>{const n=document.createElement("option");n.innerHTML=e,n.value=e,t.appendChild(n)})}function updateRestaurants(){const e=document.getElementById("cuisines-select"),t=document.getElementById("neighborhoods-select"),n=e.selectedIndex,a=t.selectedIndex,r=e[n].value,s=t[a].value;DBHelper.fetchRestaurantByCuisineAndNeighborhood(r,s,(e,t)=>{e?console.error(e):(resetRestaurants(t),fillRestaurantsHTML())})}function resetRestaurants(e){this.restaurants=[],document.getElementById("restaurants-list").innerHTML="",this.markers&&this.markers.forEach(e=>e.setMap(null)),this.markers=[],this.restaurants=e}function fillRestaurantsHTML(e=this.restaurants){const t=document.getElementById("restaurants-list");e.forEach(e=>{t.appendChild(createRestaurantHTML(e))}),addMarkersToMap()}function createRestaurantHTML(e){void 0===e.is_favorite&&(e.is_favorite=!1);const t=document.createElement("li");t.className="restaurant-card";const n=document.createElement("picture");n.className="restaurant-picture";const a=document.createElement("source");a.className="source-small lazyload";let r=DBHelper.imageUrlForRestaurant(e).concat("-small.jpg"),s=r.replace("small","medium");a.setAttribute("data-srcset",r+" 1x, "+s+" 2x"),n.appendChild(a);const i=document.createElement("source");i.className="source-large lazyload";let o=r.replace("small","large");a.setAttribute("data-srcset",s+" 1x, "+o+" 2x"),i.media="(min-width: 750px)",n.appendChild(i);const l=document.createElement("img");l.className="restaurant-img lazyload",l.alt='Image of "'+e.name+'" restaurant.',l.setAttribute("data-src",r),n.appendChild(l);const c=document.createElement("div");c.className="restaurant-info-container",c.appendChild(n);const d=document.createElement("h2");d.innerHTML=e.name,c.appendChild(d);const u=document.createElement("a"),m=JSON.parse(e.is_favorite)?"Remove restaurant "+e.name+"from favorites.":"Add restaurant "+e.name+"to favorites.";u.className="tap-target top-right",u.setAttribute("aria-label",m),u.setAttribute("role","button"),u.setAttribute("tabindex","0"),u.setAttribute("data-restid",e.id),u.setAttribute("is-favorite",e.is_favorite),u.addEventListener("click",toggleFavorite,!1),c.appendChild(u);const p=document.createElement("i");p.className="material-icons favorite-icon",p.innerHTML=JSON.parse(e.is_favorite)?"favorite":"favorite_border",u.appendChild(p);const f=document.createElement("div");f.className="address-container";const h=document.createElement("p");h.setAttribute("aria-describedby","restaurant-neighborhood-label"),h.innerHTML=e.neighborhood,f.appendChild(h);const g=document.createElement("p");g.innerHTML=e.address,g.setAttribute("aria-describedby","restaurant-address-label"),f.appendChild(g),c.appendChild(f),t.appendChild(c);const v=document.createElement("a");return v.innerHTML="View Details",v.className="tap-target restaurant-card-details",v.setAttribute("aria-label","Restaurant: "+e.name+": view details."),v.setAttribute("role","button"),v.href=DBHelper.urlForRestaurant(e),t.appendChild(v),t}function addMarkersToMap(e=this.restaurants){e.forEach(e=>{const t=DBHelper.mapMarkerForRestaurant(e,this.map);google.maps.event.addListener(t,"click",()=>{window.location.href=t.url}),this.markers.push(t)})}function toggleFavorite(e){e||(e=window.event);const t=e.srcElement||e.target,n=this.dataset.restid;let a=!JSON.parse(this.getAttribute("is-favorite"));n&&(this.setAttribute("is-favorite",a),DBHelper.setRestaurantFavorite(n,a),t==this?this.childNodes.length>0&&(this.childNodes[0].innerHTML=a?"favorite":"favorite_border"):t.innerHTML=a?"favorite":"favorite_border")}function fetchRestaurantFromURL(e){if(self.restaurant)return void e(null,self.restaurant);const t=getParameterByName("id");t?DBHelper.fetchRestaurantById(t,(t,n)=>{self.restaurant=n,n?(fillRestaurantHTML(),e(null,n)):console.error(t)}):e("No restaurant id in URL",null)}function fillRestaurantHTML(e=self.restaurant){document.getElementById("restaurant-name").innerHTML=e.name,document.getElementById("restaurant-address").innerHTML=e.address;const t=document.getElementById("restaurant-img");t.className="restaurant-img";let n=DBHelper.imageUrlForRestaurant(e).concat("-small.jpg");t.setAttribute("data-src",n),t.alt='Image of "'+e.name+'" restaurant.';const a=document.getElementById("source-small");let r=n.replace("small","medium");a.srcset=n+" 1x, "+r+" 2x";const s=document.getElementById("source-large");let i=n.replace("small","large");s.srcset=r+" 1x, "+i+" 2x",document.getElementById("restaurant-cuisine").innerHTML=e.cuisine_type,e.operating_hours&&fillRestaurantHoursHTML(),fillReviewsHTML()}function fillRestaurantHoursHTML(e=self.restaurant.operating_hours){const t=document.getElementById("restaurant-hours");for(let n in e){const a=document.createElement("tr"),r=document.createElement("td");r.innerHTML=n,r.className="table-day",a.appendChild(r);const s=document.createElement("td");s.innerHTML=e[n],s.className="table-time",a.appendChild(s),t.appendChild(a)}}function submitReview(e){e||(e=window.event);const t=(e.srcElement||e.target).getAttribute("restaurant-id"),n=document.getElementById("review-name").value,a=document.getElementById("review-text").value,r=document.getElementById("review-rating").value;if(n&&a){const e={restaurant_id:t,name:n,rating:r,comments:a,createdAt:(new Date).getTime()};document.getElementById("reviews-list").appendChild(createReviewHTML(e));DBHelper.addRestaurantReview(e)}}function fillReviewsHTML(e=self.restaurant.reviews,t=self.restaurant.id){const n=document.getElementById("reviews-container");if(!e){const e=document.createElement("p");return e.innerHTML="No reviews yet!",void n.appendChild(e)}const a=document.getElementById("add-comment");a.setAttribute("restaurant-id",t),a.addEventListener("click",submitReview,!1);const r=document.getElementById("reviews-list");e.forEach(e=>{r.appendChild(createReviewHTML(e))}),n.appendChild(r)}function createReviewHTML(e){const t=document.createElement("li"),n=document.createElement("p");n.innerHTML=e.name,t.appendChild(n);const a=document.createElement("p");a.innerHTML=new Date(e.createdAt).toLocaleDateString(),t.appendChild(a);const r=document.createElement("p");r.innerHTML=`Rating: ${e.rating}`,t.appendChild(r);const s=document.createElement("p");return s.className="review-comments",s.innerHTML=e.comments,t.appendChild(s),t}function fillBreadcrumb(e=self.restaurant){const t=document.getElementById("breadcrumb"),n=document.createElement("li");n.innerHTML=e.name,t.appendChild(n)}function getParameterByName(e,t){t||(t=window.location.href),e=e.replace(/[[\]]/g,"\\$&");const n=new RegExp(`[?&]${e}(=([^&#]*)|&|#|$)`).exec(t);return n?n[2]?decodeURIComponent(n[2].replace(/\+/g," ")):"":null}!function(e,t){var n=function(e,t){"use strict";if(t.getElementsByClassName){var n,a,r=t.documentElement,s=e.Date,i=e.HTMLPictureElement,o="addEventListener",l="getAttribute",c=e[o],d=e.setTimeout,u=e.requestAnimationFrame||d,m=e.requestIdleCallback,p=/^picture$/i,f=["load","error","lazyincluded","_lazyloaded"],h={},g=Array.prototype.forEach,v=function(e,t){return h[t]||(h[t]=new RegExp("(\\s|^)"+t+"(\\s|$)")),h[t].test(e[l]("class")||"")&&h[t]},b=function(e,t){v(e,t)||e.setAttribute("class",(e[l]("class")||"").trim()+" "+t)},y=function(e,t){var n;(n=v(e,t))&&e.setAttribute("class",(e[l]("class")||"").replace(n," "))},E=function(e,t,n){var a=n?o:"removeEventListener";n&&E(e,t),f.forEach(function(n){e[a](n,t)})},w=function(e,a,r,s,i){var o=t.createEvent("CustomEvent");return r||(r={}),r.instance=n,o.initCustomEvent(a,!s,!i,r),e.dispatchEvent(o),o},B=function(t,n){var r;!i&&(r=e.picturefill||a.pf)?r({reevaluate:!0,elements:[t]}):n&&n.src&&(t.src=n.src)},R=function(e,t){return(getComputedStyle(e,null)||{})[t]},H=function(e,t,n){for(n=n||e.offsetWidth;n<a.minSize&&t&&!e._lazysizesWidth;)n=t.offsetWidth,t=t.parentNode;return n},C=function(){var e,n,a=[],r=[],s=a,i=function(){var t=s;for(s=a.length?r:a,e=!0,n=!1;t.length;)t.shift()();e=!1},o=function(a,r){e&&!r?a.apply(this,arguments):(s.push(a),n||(n=!0,(t.hidden?d:u)(i)))};return o._lsFlush=i,o}(),D=function(e,t){return t?function(){C(e)}:function(){var t=this,n=arguments;C(function(){e.apply(t,n)})}},A=function(e){var t,n=0,r=a.throttleDelay,i=a.ricTimeout,o=function(){t=!1,n=s.now(),e()},l=m&&i>49?function(){m(o,{timeout:i}),i!==a.ricTimeout&&(i=a.ricTimeout)}:D(function(){d(o)},!0);return function(e){var a;(e=!0===e)&&(i=33),t||(t=!0,0>(a=r-(s.now()-n))&&(a=0),e||9>a?l():d(l,a))}},L=function(e){var t,n,a=function(){t=null,e()},r=function(){var e=s.now()-n;99>e?d(r,99-e):(m||a)(a)};return function(){n=s.now(),t||(t=d(r,99))}};!function(){var t,n={lazyClass:"lazyload",loadedClass:"lazyloaded",loadingClass:"lazyloading",preloadClass:"lazypreload",errorClass:"lazyerror",autosizesClass:"lazyautosizes",srcAttr:"data-src",srcsetAttr:"data-srcset",sizesAttr:"data-sizes",minSize:40,customMedia:{},init:!0,expFactor:1.5,hFac:.8,loadMode:2,loadHidden:!0,ricTimeout:0,throttleDelay:125};for(t in a=e.lazySizesConfig||e.lazysizesConfig||{},n)t in a||(a[t]=n[t]);e.lazySizesConfig=a,d(function(){a.init&&I()})}();var M=function(){var i,u,m,f,h,H,M,I,z,N,x,_,S,k,F=/^img$/i,q=/^iframe$/i,U="onscroll"in e&&!/glebot/.test(navigator.userAgent),j=0,O=0,W=-1,P=function(e){O--,e&&e.target&&E(e.target,P),(!e||0>O||!e.target)&&(O=0)},$=function(e,n){var a,s=e,i="hidden"==R(t.body,"visibility")||"hidden"!=R(e,"visibility");for(I-=n,x+=n,z-=n,N+=n;i&&(s=s.offsetParent)&&s!=t.body&&s!=r;)(i=(R(s,"opacity")||1)>0)&&"visible"!=R(s,"overflow")&&(a=s.getBoundingClientRect(),i=N>a.left&&z<a.right&&x>a.top-1&&I<a.bottom+1);return i},V=function(){var e,s,o,c,d,m,p,h,g,v=n.elements;if((f=a.loadMode)&&8>O&&(e=v.length)){s=0,W++,null==S&&("expand"in a||(a.expand=r.clientHeight>500&&r.clientWidth>500?500:370),_=a.expand,S=_*a.expFactor),S>j&&1>O&&W>2&&f>2&&!t.hidden?(j=S,W=0):j=f>1&&W>1&&6>O?_:0;for(;e>s;s++)if(v[s]&&!v[s]._lazyRace)if(U)if((h=v[s][l]("data-expand"))&&(m=1*h)||(m=j),g!==m&&(H=innerWidth+m*k,M=innerHeight+m,p=-1*m,g=m),o=v[s].getBoundingClientRect(),(x=o.bottom)>=p&&(I=o.top)<=M&&(N=o.right)>=p*k&&(z=o.left)<=H&&(x||N||z||I)&&(a.loadHidden||"hidden"!=R(v[s],"visibility"))&&(u&&3>O&&!h&&(3>f||4>W)||$(v[s],m))){if(X(v[s]),d=!0,O>9)break}else!d&&u&&!c&&4>O&&4>W&&f>2&&(i[0]||a.preloadAfterLoad)&&(i[0]||!h&&(x||N||z||I||"auto"!=v[s][l](a.sizesAttr)))&&(c=i[0]||v[s]);else X(v[s]);c&&!d&&X(c)}},J=A(V),Q=function(e){b(e.target,a.loadedClass),y(e.target,a.loadingClass),E(e.target,Y),w(e.target,"lazyloaded")},K=D(Q),Y=function(e){K({target:e.target})},Z=function(e){var t,n=e[l](a.srcsetAttr);(t=a.customMedia[e[l]("data-media")||e[l]("media")])&&e.setAttribute("media",t),n&&e.setAttribute("srcset",n)},G=D(function(e,t,n,r,s){var i,o,c,u,f,h;(f=w(e,"lazybeforeunveil",t)).defaultPrevented||(r&&(n?b(e,a.autosizesClass):e.setAttribute("sizes",r)),o=e[l](a.srcsetAttr),i=e[l](a.srcAttr),s&&(c=e.parentNode,u=c&&p.test(c.nodeName||"")),h=t.firesLoad||"src"in e&&(o||i||u),f={target:e},h&&(E(e,P,!0),clearTimeout(m),m=d(P,2500),b(e,a.loadingClass),E(e,Y,!0)),u&&g.call(c.getElementsByTagName("source"),Z),o?e.setAttribute("srcset",o):i&&!u&&(q.test(e.nodeName)?function(e,t){try{e.contentWindow.location.replace(t)}catch(n){e.src=t}}(e,i):e.src=i),s&&(o||u)&&B(e,{src:i})),e._lazyRace&&delete e._lazyRace,y(e,a.lazyClass),C(function(){(!h||e.complete&&e.naturalWidth>1)&&(h?P(f):O--,Q(f))},!0)}),X=function(e){var t,n=F.test(e.nodeName),r=n&&(e[l](a.sizesAttr)||e[l]("sizes")),s="auto"==r;(!s&&u||!n||!e[l]("src")&&!e.srcset||e.complete||v(e,a.errorClass)||!v(e,a.lazyClass))&&(t=w(e,"lazyunveilread").detail,s&&T.updateElem(e,!0,e.offsetWidth),e._lazyRace=!0,O++,G(e,t,s,r,n))},ee=function(){if(!u){if(s.now()-h<999)return void d(ee,999);var e=L(function(){a.loadMode=3,J()});u=!0,a.loadMode=3,J(),c("scroll",function(){3==a.loadMode&&(a.loadMode=2),e()},!0)}};return{_:function(){h=s.now(),n.elements=t.getElementsByClassName(a.lazyClass),i=t.getElementsByClassName(a.lazyClass+" "+a.preloadClass),k=a.hFac,c("scroll",J,!0),c("resize",J,!0),e.MutationObserver?new MutationObserver(J).observe(r,{childList:!0,subtree:!0,attributes:!0}):(r[o]("DOMNodeInserted",J,!0),r[o]("DOMAttrModified",J,!0),setInterval(J,999)),c("hashchange",J,!0),["focus","mouseover","click","load","transitionend","animationend","webkitAnimationEnd"].forEach(function(e){t[o](e,J,!0)}),/d$|^c/.test(t.readyState)?ee():(c("load",ee),t[o]("DOMContentLoaded",J),d(ee,2e4)),n.elements.length?(V(),C._lsFlush()):J()},checkElems:J,unveil:X}}(),T=function(){var e,n=D(function(e,t,n,a){var r,s,i;if(e._lazysizesWidth=a,a+="px",e.setAttribute("sizes",a),p.test(t.nodeName||""))for(r=t.getElementsByTagName("source"),s=0,i=r.length;i>s;s++)r[s].setAttribute("sizes",a);n.detail.dataAttr||B(e,n.detail)}),r=function(e,t,a){var r,s=e.parentNode;s&&(a=H(e,s,a),(r=w(e,"lazybeforesizes",{width:a,dataAttr:!!t})).defaultPrevented||(a=r.detail.width)&&a!==e._lazysizesWidth&&n(e,s,r,a))},s=L(function(){var t,n=e.length;if(n)for(t=0;n>t;t++)r(e[t])});return{_:function(){e=t.getElementsByClassName(a.autosizesClass),c("resize",s)},checkElems:s,updateElem:r}}(),I=function(){I.i||(I.i=!0,T._(),M._())};return n={cfg:a,autoSizer:T,loader:M,init:I,uP:B,aC:b,rC:y,hC:v,fire:w,gW:H,rAF:C}}}(e,e.document);e.lazySizes=n,"object"==typeof module&&module.exports&&(module.exports=n)}(window),document.addEventListener("DOMContentLoaded",e=>{fetchNeighborhoods(),fetchCuisines()}),window.initMap=(()=>{this.map=new google.maps.Map(document.getElementById("map"),{zoom:12,center:{lat:40.722216,lng:-73.987501},scrollwheel:!1}),updateRestaurants()}),window.initMapDetails=(()=>{fetchRestaurantFromURL((e,t)=>{e?console.error(e):(self.map=new google.maps.Map(document.getElementById("map"),{zoom:16,center:t.latlng,scrollwheel:!1}),fillBreadcrumb(),DBHelper.mapMarkerForRestaurant(self.restaurant,self.map))})}),"serviceWorker"in navigator&&(window.addEventListener("load",()=>{if(document.getElementById("styles").removeAttribute("disabled"),document.querySelectorAll("#map").length>0){const e=document.createElement("script");e.type="text/javascript",e.src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDZOJtKVTyEcz-RVVr4aePsebEPAP9JYaw&libraries=places&callback=initMap",document.getElementsByTagName("head")[0].appendChild(e)}navigator.serviceWorker.register("sw.js").then(()=>{console.log("Service Worker Registerd")}).catch(e=>{console.error(e)})}),window.addEventListener("online",DBHelper.sendQueuedRequests,!1));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
